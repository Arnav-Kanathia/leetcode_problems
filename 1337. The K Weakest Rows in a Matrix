class Solution {
public:
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        int m = mat.size();
        int n = mat[0].size();
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
        vector<int> ans;

        for(int i = 0; i<m; i++){
            int count = 0;
            for(int j = 0; j<n; j++){
                if(mat[i][j] == 1) count++;
            }
            pq.push({count, i});
        }

        while(k--){
            ans.push_back(pq.top().second);
            pq.pop();
        }

        return ans;
    }
};
