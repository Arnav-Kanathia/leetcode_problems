/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        vector<int> ans;
        if (root == nullptr) return ans;

        deque<TreeNode*> q;
        q.push_back(root);

        while (!q.empty()) {
            int siz = q.size();
            int maxi = INT_MIN;

            for (int i = 0; i < siz; i++) {
                TreeNode* node = q.front();
                q.pop_front();

                maxi = max(maxi, node->val);

                if (node->left) q.push_back(node->left);
                if (node->right) q.push_back(node->right);
            }

            ans.push_back(maxi);
        }

        return ans;
    }
};
