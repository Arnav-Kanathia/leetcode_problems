class Solution {
public:
    string removeDuplicateLetters(string s) {
        int n = s.length();
        unordered_map<char, int> freq;
        unordered_map<char, int> presence;
        stack<char> st;

        for(int i = 0; i<n; i++) freq[s[i]]++;

        st.push(s[0]);
        presence[s[0]] = 1;
        freq[s[0]]--;
        for(int i = 1; i<n; i++){
            if(st.top()<s[i]){
                if(!presence[s[i]]) {
                    st.push(s[i]);
                    freq[s[i]]--;
                    presence[s[i]] = 1; 
                }
            }
            else{
                if(presence[s[i]]){
                    freq[s[i]]--;
                }
                else{
                    while(!st.empty() && freq[st.top()] != 0 && st.top()>s[i]){
                        presence[st.top()] = 0;
                        st.pop();
                    }
                    st.push(s[i]);
                    freq[s[i]]--;
                    presence[s[i]] = 1;
                }
            }
        }

        string ans = "";
        while(!st.empty()){
            ans = st.top() + ans;
            st.pop();
        }

        return ans;
    }
};
